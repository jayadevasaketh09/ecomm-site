{"ast":null,"code":"var _jsxFileName = \"/home/jayadev/ecomm2/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" ProductId: \", productId, \" qty:$\", qty, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                children: [\"value=\", item.qty, \"onChange=\", e => dispatch(addToCart(item.product, Number(e.target.value)))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Rs. \", item.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Subtotal (\", cartItems.reduce((a, c) => a + c.qty, 0), \" items) : Rs.\", cartItems.reduce((a, c) => a + c.amount * c.qty, 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Proceed to Checkout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 6\n  }, this);\n} // import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"../../node_modules/axios/index\";\n// import { addToCart, removeFromCart } from \"../actions/cartActions\";\n// import { createOrder } from \"../actions/orderAction\";\n// import MessageBox from \"../components/MessageBox\";\n//\n// export default function CartScreen(props) {\n//   const productId = props.match.params.id;\n//   const qty = props.location.search\n//     ? Number(props.location.search.split(\"=\")[1])\n//     : 1;\n//   const cart = useSelector((state) => state.cart);\n//   const { cartItems } = cart;\n//   // const [items, setItems] = useState();\n//   // const { data } = await axios.get(\"/api/cart/findall\");\n//   // setItems(data);\n//\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (productId) {\n//       dispatch(addToCart(productId, qty));\n//     }\n//   }, [dispatch, productId, qty]);\n//\n//   const removeFromCartHandler = async (id) => {\n//     // const response = await axios({\n//     //   method: \"DELETE\",\n//     //   url: \"/api/delete/cart/\",\n//     //   data: {\n//\n//     //   id:id,\n//\n//     //   },\n//     // }).then(\n//     //   (response) => { axios.get('/api/cart')\n//     //     console.log(response);\n//     //   },\n//     // )\n//     // delete action\n//     dispatch(removeFromCart(id));\n//   };\n//\n//   // const checkoutHandler = () => {\n//   //   props.history.push(\"/orders/${order.id}\");\n//   //   placeOrderHandler();\n//   //   console.log(\"Order Received\");\n//   // };\n//   const checkoutHandler = async () => {\n//     dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n//\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"/api/order\",\n//       data: {\n//         amt: cart.totalPrice,\n//       },\n//     }).then((response) => {\n//       console.log(response);\n//       props.history.push(`/order`);\n//     });\n//   };\n//\n//   // const placeOrderHandler = async() => {\n//   // dispatch(createOrder({ ...cart, orderItems: cart.cartItems }))};\n//\n//   return (\n//     <>\n//       <div>\n//         {\" \"}\n//         ADD TO CART: ProdcutId: {productId} Quantity: {qty}{\" \"}\n//       </div>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <h1> Cart</h1>\n//           {cartItems.length === 0 ? (\n//             <MessageBox>\n//               Empty Cart. <Link to=\"/\">Back to HomeScreen</Link>\n//             </MessageBox>\n//           ) : (\n//             <ul>\n//               {cartItems.map((item) => (\n//                 <li key={item.product}>\n//                   <div className=\"row\">\n//                     <div className=\"min-30\">\n//                       <Link\n//                         to={`http://localhost:4000/api/products/${item.product}`}\n//                       >\n//                         {item.name}\n//                       </Link>\n//                     </div>\n//                     <div>\n//                       <select\n//                         value={item.qty}\n//                         onChange={(e) =>\n//                           dispatch(\n//                             addToCart(item.product, Number(e.target.value))\n//                           )\n//                         }\n//                       >\n//                         {[...Array(100).keys()].map((x) => (\n//                           <option key={x + 1} value={x + 1}>\n//                             {x + 1}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                     <div>${item.amount}</div>\n//                     <div>\n//                       <button\n//                         type=\"button\"\n//                         onClick={() => removeFromCartHandler(item.product)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n//         <div className=\"col-1\">\n//           <div >\n//             <ul>\n//               <li>\n//                 <h2>\n//                   Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) :\n//                   ${cartItems.reduce((a, c) => a + c.amount * c.qty, 0)}\n//                 </h2>\n//               </li>\n//               <li>\n//                 <button type=\"button\" onClick={checkoutHandler}>\n//                   Proceed to Checkout\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/home/jayadev/ecomm2/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","addToCart","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","cart","state","cartItems","dispatch","map","item","name","e","product","target","value","amount","reduce","a","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,SAAQC,SAAR,QAAwB,wBAAxB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AACzC,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GAAuBC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CAA7B,GAAmE,CAA/E;AAGA,QAAMC,IAAI,GAAIb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAzB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcF,IAApB;AAEA,QAAMG,QAAQ,GAAGjB,WAAW,EAA5B;AACED,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,SAAJ,EAAe;AACbY,MAAAA,QAAQ,CAACf,SAAS,CAACG,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACQ,QAAD,EAAWZ,SAAX,EAAsBI,GAAtB,CAJM,CAAT;AAQA,sBACG;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mCAAiBJ,SAAjB,YAAkCI,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKI;AAAA,kBACGO,SAAS,CAACE,GAAV,CAAeC,IAAD,iBACb;AAAA,iCACE;AAAA,oCAEE;AAAA,wBACAA,IAAI,CAACC;AADL;AAAA;AAAA;AAAA;AAAA,oBAFF,eAKE;AAAA,qCACE;AAAA,qCACSD,IAAI,CAACV,GADd,eAEaY,CAAD,IACRJ,QAAQ,CACNf,SAAS,CAACiB,IAAI,CAACG,OAAN,EAAeV,MAAM,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB,CADH,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF,eAkBE;AAAA,iCAAUL,IAAI,CAACM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAASN,IAAI,CAACG,OAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmCE;AAAA,6BACE;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE;AAAA,uCACaN,SAAS,CAACU,MAAV,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAC,CAACnB,GAAjC,EAAsC,CAAtC,CADb,mBAEGO,SAAS,CAACU,MAAV,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAC,CAACH,MAAF,GAAWG,CAAC,CAACnB,GAA5C,EAAiD,CAAjD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA4DA,C,CA0HF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAtVwBN,U;UAKVF,W,EAGGD,W;;;KAROG,U","sourcesContent":["import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {addToCart} from \"../actions/cartActions\";\n\nexport default function CartScreen(props){\nconst productId = props.match.params.id;\nconst qty = props.location.search? Number(props.location.search.split(\"=\")[1]):1;\n\n\nconst cart  = useSelector((state) => state.cart);\nconst {cartItems} = cart;\n\nconst dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n\n\n  return (\n     <div>\n       <div>\n         <h1> Cart</h1>\n         <h1> ProductId: {productId} qty:${qty} </h1>\n\n\n           <ul>\n             {cartItems.map((item) => (\n               <li key={item.product}>\n                 <div >\n\n                   <div >\n                  {item.name}\n                   </div>\n                   <div>\n                     <select>\n                       value={item.qty}\n                       onChange={(e) =>\n                         dispatch(\n                           addToCart(item.product, Number(e.target.value))\n\n                         )\n                       }\n\n\n                     </select>\n                   </div>\n                   <div>Rs. {item.amount}</div>\n\n                 </div>\n               </li>\n             ))}\n           </ul>\n\n       </div>\n       <div>\n         <div >\n           <ul>\n             <li>\n               <h2>\n                 Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) : Rs.\n                 {cartItems.reduce((a, c) => a + c.amount * c.qty, 0)}\n               </h2>\n             </li>\n             <li>\n               <button\n                 type=\"button\"\n\n\n\n               >\n                 Proceed to Checkout\n               </button>\n             </li>\n           </ul>\n         </div>\n       </div>\n     </div>\n   );\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"../../node_modules/axios/index\";\n// import { addToCart, removeFromCart } from \"../actions/cartActions\";\n// import { createOrder } from \"../actions/orderAction\";\n// import MessageBox from \"../components/MessageBox\";\n//\n// export default function CartScreen(props) {\n//   const productId = props.match.params.id;\n//   const qty = props.location.search\n//     ? Number(props.location.search.split(\"=\")[1])\n//     : 1;\n//   const cart = useSelector((state) => state.cart);\n//   const { cartItems } = cart;\n//   // const [items, setItems] = useState();\n//   // const { data } = await axios.get(\"/api/cart/findall\");\n//   // setItems(data);\n//\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (productId) {\n//       dispatch(addToCart(productId, qty));\n//     }\n//   }, [dispatch, productId, qty]);\n//\n//   const removeFromCartHandler = async (id) => {\n//     // const response = await axios({\n//     //   method: \"DELETE\",\n//     //   url: \"/api/delete/cart/\",\n//     //   data: {\n//\n//     //   id:id,\n//\n//     //   },\n//     // }).then(\n//     //   (response) => { axios.get('/api/cart')\n//     //     console.log(response);\n//     //   },\n//     // )\n//     // delete action\n//     dispatch(removeFromCart(id));\n//   };\n//\n//   // const checkoutHandler = () => {\n//   //   props.history.push(\"/orders/${order.id}\");\n//   //   placeOrderHandler();\n//   //   console.log(\"Order Received\");\n//   // };\n//   const checkoutHandler = async () => {\n//     dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n//\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"/api/order\",\n//       data: {\n//         amt: cart.totalPrice,\n//       },\n//     }).then((response) => {\n//       console.log(response);\n//       props.history.push(`/order`);\n//     });\n//   };\n//\n//   // const placeOrderHandler = async() => {\n//   // dispatch(createOrder({ ...cart, orderItems: cart.cartItems }))};\n//\n//   return (\n//     <>\n//       <div>\n//         {\" \"}\n//         ADD TO CART: ProdcutId: {productId} Quantity: {qty}{\" \"}\n//       </div>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <h1> Cart</h1>\n//           {cartItems.length === 0 ? (\n//             <MessageBox>\n//               Empty Cart. <Link to=\"/\">Back to HomeScreen</Link>\n//             </MessageBox>\n//           ) : (\n//             <ul>\n//               {cartItems.map((item) => (\n//                 <li key={item.product}>\n//                   <div className=\"row\">\n//                     <div className=\"min-30\">\n//                       <Link\n//                         to={`http://localhost:4000/api/products/${item.product}`}\n//                       >\n//                         {item.name}\n//                       </Link>\n//                     </div>\n//                     <div>\n//                       <select\n//                         value={item.qty}\n//                         onChange={(e) =>\n//                           dispatch(\n//                             addToCart(item.product, Number(e.target.value))\n//                           )\n//                         }\n//                       >\n//                         {[...Array(100).keys()].map((x) => (\n//                           <option key={x + 1} value={x + 1}>\n//                             {x + 1}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                     <div>${item.amount}</div>\n//                     <div>\n//                       <button\n//                         type=\"button\"\n//                         onClick={() => removeFromCartHandler(item.product)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n//         <div className=\"col-1\">\n//           <div >\n//             <ul>\n//               <li>\n//                 <h2>\n//                   Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) :\n//                   ${cartItems.reduce((a, c) => a + c.amount * c.qty, 0)}\n//                 </h2>\n//               </li>\n//               <li>\n//                 <button type=\"button\" onClick={checkoutHandler}>\n//                   Proceed to Checkout\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}