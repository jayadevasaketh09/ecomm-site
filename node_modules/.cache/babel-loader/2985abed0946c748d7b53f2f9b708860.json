{"ast":null,"code":"export const initialState = {\n  cart: [],\n  user: null\n};\nexport const getCartTotal = cart => cart === null || cart === void 0 ? void 0 : cart.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      return { ...state,\n        cart: [...state.cart, action.item]\n      };\n\n    case \"REMOVE_FROM_CART\":\n      const index = state.cart.findIndex(cartItem => cartItem.id === action.id);\n      let newCart = [...state.cart];\n\n      if (index >= 0) {\n        newCart.splice(index, 1);\n      } else {\n        console.warn('Cannot remove the item');\n      }\n\n      return { ...state,\n        cart: newCart\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jayadev/ecomm-site/src/reducer.js"],"names":["initialState","cart","user","getCartTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","cartItem","id","newCart","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAC,EADmB;AAExBC,EAAAA,IAAI,EAAC;AAFmB,CAArB;AAKP,OAAO,MAAMC,YAAY,GAAIF,IAAD,IAC1BA,IAD0B,aAC1BA,IAD0B,uBAC1BA,IAAI,CAAEG,MAAN,CAAa,CAACC,MAAD,EAAQC,IAAR,KAAgBA,IAAI,CAACC,KAAL,GAAaF,MAA1C,EAAkD,CAAlD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,IAAI,EAAE,CAAC,GAAGQ,KAAK,CAACR,IAAV,EAAgBS,MAAM,CAACJ,IAAvB;AAFD,OAAP;;AAIF,SAAK,kBAAL;AACE,YAAMQ,KAAK,GAAGL,KAAK,CAACR,IAAN,CAAWc,SAAX,CACXC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACO,EADzB,CAAd;AAGA,UAAIC,OAAO,GAAG,CAAC,GAAGT,KAAK,CAACR,IAAV,CAAd;;AAEA,UAAIa,KAAK,IAAE,CAAX,EAAa;AACXI,QAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACD,OAFD,MAGI;AACFH,QAAAA,OAAO,CAACS,IAAR,CAAa,wBAAb;AACD;;AACD,aAAM,EACJ,GAAGX,KADC;AAEJR,QAAAA,IAAI,EAAEiB;AAFF,OAAN;AAlBJ;AA0BG,CA5BP;;AA8BA,eAAeV,OAAf","sourcesContent":["export const initialState = {\n    cart:[],\n    user:null \n};\n\nexport const getCartTotal = (cart) => \n  cart?.reduce((amount,item)=> item.price + amount, 0)\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n      case \"ADD_TO_CART\":\n        return {\n          ...state,\n          cart: [...state.cart, action.item],\n        };\n      case \"REMOVE_FROM_CART\":\n        const index = state.cart.findIndex(\n          (cartItem) => cartItem.id === action.id\n        );\n        let newCart = [...state.cart];\n\n        if (index>=0){\n          newCart.splice(index, 1);\n        }\n        else{\n          console.warn('Cannot remove the item')\n        }\n        return{\n          ...state,\n          cart: newCart\n        }\n        }\n        \n      \n    \n      }\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}