{"ast":null,"code":"var _jsxFileName = \"/home/jayadev/ecomm2/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import axios from \"axios\";\n//\n// import { addToCart, removeFromCart } from \"../actions/cartActions\";\n//\n// export default function CartScreen(props) {\n//   const productId = props.match.params.id;\n//   const qty = props.location.search\n//     ? Number(props.location.search.split(\"=\")[1])\n//     : 1;\n//\n//   const cart = useSelector((state) => state.cart);\n//   const { cartItems } = cart;\n//\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (productId) {\n//       dispatch(addToCart(productId, qty));\n//     }\n//   }, [dispatch, productId, qty]);\n//\n//   const removeHandler = (productId) => {\n//     dispatch(removeFromCart(productId));\n//   };\n//\n//   const checkoutHandler = async () => {\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"http://localhost:4000/api/order\",\n//       data: {\n//         qty: qty,\n//         productId: productId,\n//       },\n//     }).then((response) => {\n//       props.history.push(`/order`);\n//     });\n//   };\n//\n//   return (\n//     <div>\n//       <div>\n//         <h1> Cart</h1>\n//         <h1>\n//           ProductId: {productId} Quantity:{qty}\n//         </h1>\n//\n//         <ul>\n//           {cartItems.map((item) => (\n//             <li key={item.product}>\n//               <div>\n//                 <div>{item.name}</div>\n//                 <div>\n//                   <select>\n//                     value={item.qty}\n//                     onChange=\n//                     {(e) =>\n//                       dispatch(\n//                         addToCart(item.productId, Number(e.target.value))\n//                       )\n//                     }\n//                     {[...Array(100).keys()].map((x) => (\n//                       <option key={x + 1} value={x + 1}>\n//                         {x + 1}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div>Rs. {item.amount}</div>\n//               </div>\n//               <div>\n//                 <button onClick={() => removeHandler(item.product)}>\n//                   Remove From Cart\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"col-1\">\n//         <div className=\"card\">\n//           <h1>\n//             Subtotal {cartItems.reduce((a, c) => a + c.qty, 0)} Items: Rs.{\" \"}\n//             {cartItems.reduce((a, c) => a + c.qty * c.amount, 0)  }\n//\n//           </h1>\n//             // console.log('value',x)\n//           <button onClick={checkoutHandler} disabled={cartItems.length === 0}>\n//             Order Now\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n//\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"../../node_modules/axios/index\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart; // const [items, setItems] = useState();\n  // const { data } = await axios.get(\"/api/cart/findall\");\n  // setItems(data);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeHandler = productId => {\n    dispatch(removeFromCart(productId));\n  };\n\n  const checkoutHandler = async () => {\n    const response = await axios({\n      method: \"POST\",\n      url: \"http://localhost:4000/api/order\",\n      data: {\n        qty: qty,\n        productId: productId\n      }\n    }).then(response => {\n      props.history.push(`/order`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"ProductId: \", productId, \" Quantity: \", qty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [item.name, item.product]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: item.qty,\n                  onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n                  children: [...Array(100).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: x + 1,\n                    children: x + 1\n                  }, x + 1, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"$\", item.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeHandler(item.product),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)\n          }, item.product, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Subtotal (\", cartItems.reduce((a, c) => a + c.qty, 0), \" items) : $\", cartItems.reduce((a, c) => a + c.amount * c.qty, 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkoutHandler,\n          children: \"Order Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/home/jayadev/ecomm2/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","axios","addToCart","removeFromCart","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","cart","state","cartItems","dispatch","removeHandler","checkoutHandler","response","method","url","data","then","history","push","map","item","name","product","e","target","value","Array","keys","x","amount","reduce","a","c"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA+HA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACRC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADE,GAER,CAFJ;AAGA,QAAMC,IAAI,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB,CANwC,CAOxC;AACA;AACA;;AAEA,QAAMG,QAAQ,GAAGnB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAJ,EAAe;AACbY,MAAAA,QAAQ,CAAChB,SAAS,CAACI,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACQ,QA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","sourcesContent":["// import React, { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import axios from \"axios\";\n//\n// import { addToCart, removeFromCart } from \"../actions/cartActions\";\n//\n// export default function CartScreen(props) {\n//   const productId = props.match.params.id;\n//   const qty = props.location.search\n//     ? Number(props.location.search.split(\"=\")[1])\n//     : 1;\n//\n//   const cart = useSelector((state) => state.cart);\n//   const { cartItems } = cart;\n//\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (productId) {\n//       dispatch(addToCart(productId, qty));\n//     }\n//   }, [dispatch, productId, qty]);\n//\n//   const removeHandler = (productId) => {\n//     dispatch(removeFromCart(productId));\n//   };\n//\n//   const checkoutHandler = async () => {\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"http://localhost:4000/api/order\",\n//       data: {\n//         qty: qty,\n//         productId: productId,\n//       },\n//     }).then((response) => {\n//       props.history.push(`/order`);\n//     });\n//   };\n//\n//   return (\n//     <div>\n//       <div>\n//         <h1> Cart</h1>\n//         <h1>\n//           ProductId: {productId} Quantity:{qty}\n//         </h1>\n//\n//         <ul>\n//           {cartItems.map((item) => (\n//             <li key={item.product}>\n//               <div>\n//                 <div>{item.name}</div>\n//                 <div>\n//                   <select>\n//                     value={item.qty}\n//                     onChange=\n//                     {(e) =>\n//                       dispatch(\n//                         addToCart(item.productId, Number(e.target.value))\n//                       )\n//                     }\n//                     {[...Array(100).keys()].map((x) => (\n//                       <option key={x + 1} value={x + 1}>\n//                         {x + 1}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div>Rs. {item.amount}</div>\n//               </div>\n//               <div>\n//                 <button onClick={() => removeHandler(item.product)}>\n//                   Remove From Cart\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"col-1\">\n//         <div className=\"card\">\n//           <h1>\n//             Subtotal {cartItems.reduce((a, c) => a + c.qty, 0)} Items: Rs.{\" \"}\n//             {cartItems.reduce((a, c) => a + c.qty * c.amount, 0)  }\n//\n//           </h1>\n//             // console.log('value',x)\n//           <button onClick={checkoutHandler} disabled={cartItems.length === 0}>\n//             Order Now\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n//\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"../../node_modules/axios/index\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nexport default function CartScreen(props) {\n  const productId = props.match.params.id;\n  const qty = props.location.search\n    ? Number(props.location.search.split(\"=\")[1])\n    : 1;\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  // const [items, setItems] = useState();\n  // const { data } = await axios.get(\"/api/cart/findall\");\n  // setItems(data);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeHandler = (productId) => {\n     dispatch(removeFromCart(productId));\n   };\n\n\n  const checkoutHandler = async () => {\n    const response = await axios({\n      method: \"POST\",\n      url: \"http://localhost:4000/api/order\",\n      data: {\n        qty: qty,\n        productId: productId,\n      },\n    }).then((response) => {\n      props.history.push(`/order`);\n    });\n  };\n\n\n  return (\n    <>\n      <div>\n\n         ProductId: {productId} Quantity: {qty}\n      </div>\n      <div>\n        <div>\n          <h1> Cart</h1>\n\n            <ul>\n              {cartItems.map((item) => (\n                <li key={item.product}>\n                  <div>\n                    <div>\n\n                        {item.name}\n                        {item.product}\n\n                    </div>\n                    <div>\n                      <select\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(100).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <div>${item.amount}</div>\n                    <div>\n                      <button\n\n                        onClick={() => removeHandler(item.product)}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n        </div>\n        <div >\n\n\n\n                <h2>\n                  Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) :\n                  ${cartItems.reduce((a, c) => a + c.amount * c.qty, 0)}\n                </h2>\n\n\n                <button  onClick={checkoutHandler}>\n                  Order Now\n                </button>\n\n\n\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}