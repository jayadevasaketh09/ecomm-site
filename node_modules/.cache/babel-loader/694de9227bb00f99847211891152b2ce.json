{"ast":null,"code":"var _jsxFileName = \"/home/jayadev/ecomm2/src/Prodmod.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Modal, Button, message } from \"antd\";\nimport Catmod3 from \"./Catmod3\";\nimport DropCat from \"./DropCat\";\nimport DropBrand from \"./DropBrand\";\nimport GetProd from \"./axprod\"; // import onChange from \"./Catmod3\";\n\nimport SpecProd from \"./Spec\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Prodmod = () => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const [value, setValue] = useState();\n  const [value1, setValue1] = useState();\n  const [value2, setValue2] = useState();\n  const [value3, setValue3] = useState();\n  const [value4, setValue4] = useState();\n  const [value5, setValue5] = useState();\n  const [valueS1, setValueS1] = useState();\n  const [valueS2, setValueS2] = useState();\n  const [valueCid, setValueCid] = useState();\n  const [valueBid, setValueBid] = useState();\n\n  const Prod = e => {\n    setValue(e);\n  };\n\n  const Amount = e => {\n    setValue1(e);\n  };\n\n  const Units = e => {\n    setValue2(e);\n  };\n\n  const Spec1 = e => {\n    setValue3(e);\n  };\n\n  const Spec2 = e => {\n    setValue4(e);\n  };\n\n  const Spec3 = e => {\n    setValue5(e);\n  };\n\n  const SpecName = e => {\n    setValueS1(e);\n  };\n\n  const SpecValue = e => {\n    setValueS2(e);\n  };\n\n  const CategoryId = e => {\n    setValueCid(e);\n  };\n\n  const BrandId = e => {\n    setValueBid(e);\n  };\n\n  const handleOk = () => {\n    console.log(value);\n    console.log(value1);\n    console.log(value2);\n    GetProd({\n      name: value,\n      amount: value1,\n      units: value2,\n      brandId: valueBid,\n      categoryId: valueCid,\n      spects: [{\n        name: valueS1,\n        value: valueS2\n      }]\n    });\n    setIsModalVisible(false);\n    setTimeout(() => {\n      message.success(\"Product Created\");\n    }, 500); // setValue=(\"\")\n    // setValue1=(\"\")\n    // setValue2=(\"\") \n    // setValueS1=(\"\")\n    // setValueS2=(\"\")\n    // setValueBid=(\"\")\n    // setValueCid=(\"\")\n    // setValue7=(\"\")\n    // Form.resetFields();\n    // console.log(\"Successfully Added\");\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      children: \"Create Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Create Product\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      okText: \"Submit\",\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form // {...formItemLayout}\n          // layout={formLayout}\n          // form={form}\n          // initialValues={{\n          //   layout: formLayout,\n          // }}\n          // onValuesChange={onFormLayoutChange}dfd\n          , {\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Product Name\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: value,\n                placeholder: \"Type in Product Name\",\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Amount\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: value1,\n                placeholder: \"Type in Product Price\",\n                onChange: amountChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"No.of Units\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                value: value2,\n                placeholder: \"Type in Units\",\n                onChange: unitsChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(DropCat, {\n            getCategoryId: CategoryId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropBrand, {\n            getBrandId: BrandId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Prodmod, \"WGguV95kB3dv7wFnbXt+6YDa9Cs=\");\n\n_c = Prodmod;\nexport default Prodmod;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prodmod\");","map":{"version":3,"sources":["/home/jayadev/ecomm2/src/Prodmod.js"],"names":["React","useState","Form","Input","Modal","Button","message","Catmod3","DropCat","DropBrand","GetProd","SpecProd","format","Prodmod","isModalVisible","setIsModalVisible","showModal","value","setValue","value1","setValue1","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","valueS1","setValueS1","valueS2","setValueS2","valueCid","setValueCid","valueBid","setValueBid","Prod","e","Amount","Units","Spec1","Spec2","Spec3","SpecName","SpecValue","CategoryId","BrandId","handleOk","console","log","name","amount","units","brandId","categoryId","spects","setTimeout","success","handleCancel","onChange","amountChange","unitsChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Modal, Button, message } from \"antd\";\nimport Catmod3 from \"./Catmod3\";\nimport DropCat from \"./DropCat\";\nimport DropBrand from \"./DropBrand\";\nimport GetProd from \"./axprod\";\n// import onChange from \"./Catmod3\";\nimport SpecProd from \"./Spec\";\nimport { format } from \"date-fns\";\n\nconst Prodmod = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const [value, setValue] = useState();\n  const [value1, setValue1] = useState();\n  const [value2, setValue2] = useState();\n  const [value3, setValue3] = useState();\n  const [value4, setValue4] = useState();\n  const [value5, setValue5] = useState();\n  const [valueS1, setValueS1] = useState();\n  const [valueS2, setValueS2] = useState();\n  const [valueCid, setValueCid] = useState();\n  const [valueBid, setValueBid] = useState();\n\n  const Prod = (e) => {\n    setValue(e);\n  };\n\n  const Amount = (e) => {\n    setValue1(e);\n  };\n\n  const Units = (e) => {\n    setValue2(e);\n  };\n\n  const Spec1 = (e) => {\n    setValue3(e);\n  };\n\n  const Spec2 = (e) => {\n    setValue4(e);\n  };\n\n  const Spec3 = (e) => {\n    setValue5(e);\n  };\n\n  const SpecName = (e) => {\n    setValueS1(e);\n  };\n\n  const SpecValue = (e) => {\n    setValueS2(e);\n  };\n\n  const CategoryId = (e) => {\n    setValueCid(e);\n  };\n\n  const BrandId = (e) => {\n    setValueBid(e);\n  };\n\n  const handleOk = () => {\n    console.log(value);\n    console.log(value1);\n    console.log(value2);\n\n    GetProd({\n      name: value,\n      amount: value1,\n      units: value2,\n      brandId: valueBid,\n      categoryId: valueCid,\n      spects: [{ name: valueS1, value: valueS2 }],\n    });\n    setIsModalVisible(false);\n\n\n    setTimeout(() =>{\n      message.success(\"Product Created\")\n      }, 500);\n\n    \n      // setValue=(\"\")\n      // setValue1=(\"\")\n      // setValue2=(\"\") \n      // setValueS1=(\"\")\n      // setValueS2=(\"\")\n      // setValueBid=(\"\")\n      // setValueCid=(\"\")\n      // setValue7=(\"\")\n\n\n    // Form.resetFields();\n    // console.log(\"Successfully Added\");\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Create Product\n      </Button>\n\n      <Modal\n        title=\"Create Product\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        okText=\"Submit\"\n        onCancel={handleCancel}\n      >\n        <h1>\n          <>\n\n          <Form\n      // {...formItemLayout}\n      // layout={formLayout}\n      // form={form}\n      // initialValues={{\n      //   layout: formLayout,\n      // }}\n      // onValuesChange={onFormLayoutChange}dfd\n      >\n        <Form.Item label=\"Product Name\">\n          <Input\n            value={value}\n            placeholder=\"Type in Product Name\"\n            onChange={onChange}\n          />\n        </Form.Item>\n      </Form>\n\n      <Form>\n        <Form.Item label=\"Amount\">\n          <Input\n            value={value1}\n            placeholder=\"Type in Product Price\"\n            onChange={amountChange}\n          />\n        </Form.Item>\n\n        <Form.Item label=\"No.of Units\">\n          <Input\n            value={value2}\n            placeholder=\"Type in Units\"\n            onChange={unitsChange}\n          />\n        </Form.Item>\n        </Form>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            {/* <Catmod3\n              updateProductName={Prod}\n              updateProductAmount={Amount}\n              updateProductUnits={Units}\n              updateProductSpec1={Spec1}\n              updateProductSpec2={Spec2}\n              updateProductSpec3={Spec3}\n            /> */}\n            <DropCat getCategoryId={CategoryId} />\n            <DropBrand getBrandId={BrandId} />\n            {/* <SpecProd updateSpecName={SpecName} updateSpecValue={SpecValue} /> */}\n          </>\n        </h1>\n      </Modal>\n    </>\n  );\n};\n\nexport default Prodmod;\n"]},"metadata":{},"sourceType":"module"}