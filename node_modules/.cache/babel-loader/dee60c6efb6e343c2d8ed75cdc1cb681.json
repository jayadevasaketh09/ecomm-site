{"ast":null,"code":"var _jsxFileName = \"/home/jayadev/ecomm2/src/Model.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Modal, Button, Alert, message } from \"antd\";\nimport Catmod from \"./Catmod\"; // import dropCat from \"./DropCat\";\n\nimport GetCat from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Mod = () => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [form] = Form.useForm();\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const [value, setValue] = useState();\n\n  const Adi = e => {\n    setValue(e); // console.log(\"\", e);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    GetCat({\n      name: value\n    });\n    setTimeout(() => {\n      message.success(\"Category Created\");\n    }, 500);\n    console.log(\"Successfully Added\");\n    form.reset(); // setValue=(\"\")\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      children: \"Create Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Create Category\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      okText: \"Submit\",\n      onCancel: handleCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form // {...formItemLayout}\n    // layout={formLayout}\n    , {\n      form: form // initialValues={{\n      //   layout: formLayout,\n      // }}\n      // onValuesChange={onFormLayoutChange}\n      ,\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Input\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: value,\n          placeholder: \"Type in Category\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Mod, \"P7UqbQDYaw+mrYaRzV5vFMbFPnA=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Mod;\nexport default Mod;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mod\");","map":{"version":3,"sources":["/home/jayadev/ecomm2/src/Model.js"],"names":["React","useState","Form","Modal","Button","Alert","message","Catmod","GetCat","Mod","isModalVisible","setIsModalVisible","form","useForm","showModal","value","setValue","Adi","e","handleOk","name","setTimeout","success","console","log","reset","handleCancel","onChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,OAArC,QAAoD,MAApD;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,SAAnB;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACW,IAAD,IAASV,IAAI,CAACW,OAAL,EAAf;;AAGA,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAED,GAHD;;AAKA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;;AAEA,QAAMgB,GAAG,GAAIC,CAAD,IAAO;AACjBF,IAAAA,QAAQ,CAACE,CAAD,CAAR,CADiB,CAEjB;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACrBR,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAH,IAAAA,MAAM,CAAC;AAACY,MAAAA,IAAI,EAAEL;AAAP,KAAD,CAAN;AACAM,IAAAA,UAAU,CAAC,MAAK;AAChBf,MAAAA,OAAO,CAACgB,OAAR,CAAgB,kBAAhB;AACC,KAFS,EAEP,GAFO,CAAV;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAZ,IAAAA,IAAI,CAACa,KAAL,GARqB,CAUrB;AACD,GAXD;;AAaA,QAAMC,YAAY,GAAG,MAAM;AACzBf,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAEG,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,OAAO,EAAEJ,cAFX;AAGE,MAAA,IAAI,EAAES,QAHR;AAIE,MAAA,MAAM,EAAC,QAJT;AAKE,MAAA,QAAQ,EAAEO;AALZ;AAAA;AAAA;AAAA;AAAA,YALF,eAeE,QAAC,IAAD,CACE;AACA;AAFF;AAGE,MAAA,IAAI,EAAEd,IAHR,CAIE;AACA;AACA;AACA;AAPF;AAAA,6BASE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEG,KADT;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,QAAQ,EAAEY;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAqCD,CAxED;;GAAMlB,G;UAGWP,IAAI,CAACW,O;;;KAHhBJ,G;AA0EN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Modal, Button, Alert, message } from \"antd\";\nimport Catmod from \"./Catmod\";\n// import dropCat from \"./DropCat\";\nimport GetCat from \"./axios\";\n\n\nconst Mod = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const [form] = Form.useForm();\n\n\n  const showModal = () => {\n    setIsModalVisible(true);\n\n  };\n\n  const [value, setValue] = useState();\n\n  const Adi = (e) => {\n    setValue(e);\n    // console.log(\"\", e);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    GetCat({name: value });\n    setTimeout(() =>{\n    message.success(\"Category Created\")\n    }, 500);\n\n    console.log(\"Successfully Added\");\n    form.reset();\n\n    // setValue=(\"\")\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal}>\n        Create Category\n      </Button>\n\n      <Modal\n        title=\"Create Category\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        okText=\"Submit\"\n        onCancel={handleCancel}\n      >\n        {/* <Catmod updateCategoryName={Adi} /> */}\n      </Modal>\n\n      <Form\n        // {...formItemLayout}\n        // layout={formLayout}\n        form={form}\n        // initialValues={{\n        //   layout: formLayout,\n        // }}\n        // onValuesChange={onFormLayoutChange}\n      >\n        <Form.Item label=\"Input\">\n          <Input\n            value={value}\n            placeholder=\"Type in Category\"\n            onChange={onChange}\n          />\n        </Form.Item>\n      </Form>\n\n      {/* <Button onClick={GetCat}>Submit</Button> */}\n    </>\n  );\n};\n\nexport default Mod;\n"]},"metadata":{},"sourceType":"module"}