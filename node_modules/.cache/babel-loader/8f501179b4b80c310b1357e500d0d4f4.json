{"ast":null,"code":"//\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import axios from '../../node_modules/axios/index';\n// import CheckoutSteps from '../components/CheckoutSteps';\n// import { createOrder } from '../actions/orderAction';\n// import { ORDER_CREATE_RESET } from '../constants/orderConstants';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n//\n// export default function PlaceOrderScreen(props) {\n//   const cart = useSelector((state) => state.cart);\n//\n//   const orderCreate = useSelector((state) => state.orderCreate);\n//   const { loading, success, error, order } = orderCreate;\n//\n//\n//   const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n//   cart.itemsPrice = toPrice(\n//     cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\n//   );\n//   cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n//   cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n//   cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n//\n//\n//\n//   // const [cart, setCart] = useState([]);\n//\n//   // useEffect(() => {\n//   //   async function getCharacters() {\n//   //     const { data } = await axios.get(\"api/category\");\n//   //     // const response = await fetch(\"api/category\");\n//   //     // const body = await response.json();\n//   //     // setItems(body.results.map(({ title }) => ({ value: title })));\n//   //     setCart(data);\n//   //   }\n//   //   getCharacters();\n//   // }, []);\n//   const dispatch = useDispatch();\n//   const placeOrderHandler = async() => {\n//     dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n//\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"/api/checkout\",\n//       data: {\n//         amt: cart.totalPrice ,\n//\n//\n//       },\n//     }).then(\n//       (response) => {\n//         console.log(response);\n//         props.history.push(`/order/${order.id}`);\n//       },\n//     )\n//\n//   };\n//     useEffect(() => {\n//       if (success) {\n//         // props.history.push(`/order/${order._id}`);\n//         dispatch({ type: ORDER_CREATE_RESET });\n//       }\n//     }, [dispatch, order, props.history, success]);\n//\n//     // TODO: dispatch place order action\n//\n//   return (\n//     <div>\n//       <CheckoutSteps step1 step2 ></CheckoutSteps>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <ul>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Shipping</h2>\n//                 <p>\n//                   <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n//                   <strong>Address: </strong> {cart.shippingAddress.address},\n//                   {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}\n//                   ,{cart.shippingAddress.country}\n//                 </p>\n//               </div>\n//             </li>\n//\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Order Items</h2>\n//                 <ul>\n//                   {cart.cartItems.map((item) => (\n//                     <li key={item.product}>\n//                       <div className=\"row\">\n//\n//                         <div className=\"min-30\">\n//                           <Link to={`/products/${item.product}`}>\n//                             {item.title}\n//                           </Link>\n//                         </div>\n//\n//                         <div className =\"amt\">\n//                           {item.qty} x ${item.price} = ${item.qty * item.price}\n//                         </div>\n//                       </div>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             </li>\n//           </ul>\n//         </div>\n//         <div className=\"col-1\">\n//           <div className=\"card card-body\">\n//             <ul>\n//               <li>\n//                 <h2>Order Summary</h2>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Items</div>\n//                   <div>${cart.itemsPrice.toFixed(2)}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Shipping</div>\n//                   <div>${cart.shippingPrice.toFixed(2)}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Tax</div>\n//                   <div>${cart.taxPrice.toFixed(2)}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>\n//                     <strong> Order Total</strong>\n//                   </div>\n//                   <div>\n//                     <strong>${cart.totalPrice.toFixed(2)}</strong>\n//                   </div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <button\n//                   type=\"button\"\n//                   onClick={placeOrderHandler}\n//                   className=\"primary block\"\n//                   disabled={cart.cartItems.length === 0}\n//                 >\n//                   Place Order\n//                 </button>\n//               </li>\n//               {loading && <LoadingBox></LoadingBox>}\n//               {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/jayadev/ecomm2/src/screens/PlaceOrderScreen.js"],"names":[],"mappingssourcesContent":["//\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import axios from '../../node_modules/axios/index';\n// import CheckoutSteps from '../components/CheckoutSteps';\n// import { createOrder } from '../actions/orderAction';\n// import { ORDER_CREATE_RESET } from '../constants/orderConstants';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n//\n// export default function PlaceOrderScreen(props) {\n//   const cart = useSelector((state) => state.cart);\n//\n//   const orderCreate = useSelector((state) => state.orderCreate);\n//   const { loading, success, error, order } = orderCreate;\n//\n//\n//   const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n//   cart.itemsPrice = toPrice(\n//     cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\n//   );\n//   cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n//   cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n//   cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n//\n//\n//\n//   // const [cart, setCart] = useState([]);\n//\n//   // useEffect(() => {\n//   //   async function getCharacters() {\n//   //     const { data } = await axios.get(\"api/category\");\n//   //     // const response = await fetch(\"api/category\");\n//   //     // const body = await response.json();\n//   //     // setItems(body.results.map(({ title }) => ({ value: title })));\n//   //     setCart(data);\n//   //   }\n//   //   getCharacters();\n//   // }, []);\n//   const dispatch = useDispatch();\n//   const placeOrderHandler = async() => {\n//     dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n//\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"/api/checkout\",\n//       data: {\n//         amt: cart.totalPrice ,\n//\n//\n//       },\n//     }).then(\n//       (response) => {\n//         console.log(response);\n//         props.history.push(`/order/${order.id}`);\n//       },\n//     )\n//\n//   };\n//     useEffect(() => {\n//       if (success) {\n//         // props.history.push(`/order/${order._id}`);\n//         dispatch({ type: ORDER_CREATE_RESET });\n//       }\n//     }, [dispatch, order, props.history, success]);\n//\n//     // TODO: dispatch place order action\n//\n//   return (\n//     <div>\n//       <CheckoutSteps step1 step2 ></CheckoutSteps>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <ul>\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Shipping</h2>\n//                 <p>\n//                   <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n//                   <strong>Address: </strong> {cart.shippingAddress.address},\n//                   {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}\n//                   ,{cart.shippingAddress.country}\n//                 </p>\n//               </div>\n//             </li>\n//\n//             <li>\n//               <div className=\"card card-body\">\n//                 <h2>Order Items</h2>\n//                 <ul>\n//                   {cart.cartItems.map((item) => (\n//                     <li key={item.product}>\n//                       <div className=\"row\">\n//\n//                         <div className=\"min-30\">\n//                           <Link to={`/products/${item.product}`}>\n//                             {item.title}\n//                           </Link>\n//                         </div>\n//\n//                         <div className =\"amt\">\n//                           {item.qty} x ${item.price} = ${item.qty * item.price}\n//                         </div>\n//                       </div>\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             </li>\n//           </ul>\n//         </div>\n//         <div className=\"col-1\">\n//           <div className=\"card card-body\">\n//             <ul>\n//               <li>\n//                 <h2>Order Summary</h2>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Items</div>\n//                   <div>${cart.itemsPrice.toFixed(2)}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Shipping</div>\n//                   <div>${cart.shippingPrice.toFixed(2)}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>Tax</div>\n//                   <div>${cart.taxPrice.toFixed(2)}</div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <div className=\"row\">\n//                   <div>\n//                     <strong> Order Total</strong>\n//                   </div>\n//                   <div>\n//                     <strong>${cart.totalPrice.toFixed(2)}</strong>\n//                   </div>\n//                 </div>\n//               </li>\n//               <li>\n//                 <button\n//                   type=\"button\"\n//                   onClick={placeOrderHandler}\n//                   className=\"primary block\"\n//                   disabled={cart.cartItems.length === 0}\n//                 >\n//                   Place Order\n//                 </button>\n//               </li>\n//               {loading && <LoadingBox></LoadingBox>}\n//               {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}