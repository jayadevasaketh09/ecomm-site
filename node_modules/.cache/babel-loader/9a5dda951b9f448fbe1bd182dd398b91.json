{"ast":null,"code":"import React from 'react';\nexport default function CartSccreen(props) {\n  const productId = props.match.params.id;\n} // import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"../../node_modules/axios/index\";\n// import { addToCart, removeFromCart } from \"../actions/cartActions\";\n// import { createOrder } from \"../actions/orderAction\";\n// import MessageBox from \"../components/MessageBox\";\n//\n// export default function CartScreen(props) {\n//   const productId = props.match.params.id;\n//   const qty = props.location.search\n//     ? Number(props.location.search.split(\"=\")[1])\n//     : 1;\n//   const cart = useSelector((state) => state.cart);\n//   const { cartItems } = cart;\n//   // const [items, setItems] = useState();\n//   // const { data } = await axios.get(\"/api/cart/findall\");\n//   // setItems(data);\n//\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (productId) {\n//       dispatch(addToCart(productId, qty));\n//     }\n//   }, [dispatch, productId, qty]);\n//\n//   const removeFromCartHandler = async (id) => {\n//     // const response = await axios({\n//     //   method: \"DELETE\",\n//     //   url: \"/api/delete/cart/\",\n//     //   data: {\n//\n//     //   id:id,\n//\n//     //   },\n//     // }).then(\n//     //   (response) => { axios.get('/api/cart')\n//     //     console.log(response);\n//     //   },\n//     // )\n//     // delete action\n//     dispatch(removeFromCart(id));\n//   };\n//\n//   // const checkoutHandler = () => {\n//   //   props.history.push(\"/orders/${order.id}\");\n//   //   placeOrderHandler();\n//   //   console.log(\"Order Received\");\n//   // };\n//   const checkoutHandler = async () => {\n//     dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n//\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"/api/order\",\n//       data: {\n//         amt: cart.totalPrice,\n//       },\n//     }).then((response) => {\n//       console.log(response);\n//       props.history.push(`/order`);\n//     });\n//   };\n//\n//   // const placeOrderHandler = async() => {\n//   // dispatch(createOrder({ ...cart, orderItems: cart.cartItems }))};\n//\n//   return (\n//     <>\n//       <div>\n//         {\" \"}\n//         ADD TO CART: ProdcutId: {productId} Quantity: {qty}{\" \"}\n//       </div>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <h1> Cart</h1>\n//           {cartItems.length === 0 ? (\n//             <MessageBox>\n//               Empty Cart. <Link to=\"/\">Back to HomeScreen</Link>\n//             </MessageBox>\n//           ) : (\n//             <ul>\n//               {cartItems.map((item) => (\n//                 <li key={item.product}>\n//                   <div className=\"row\">\n//                     <div className=\"min-30\">\n//                       <Link\n//                         to={`http://localhost:4000/api/products/${item.product}`}\n//                       >\n//                         {item.name}\n//                       </Link>\n//                     </div>\n//                     <div>\n//                       <select\n//                         value={item.qty}\n//                         onChange={(e) =>\n//                           dispatch(\n//                             addToCart(item.product, Number(e.target.value))\n//                           )\n//                         }\n//                       >\n//                         {[...Array(100).keys()].map((x) => (\n//                           <option key={x + 1} value={x + 1}>\n//                             {x + 1}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                     <div>${item.amount}</div>\n//                     <div>\n//                       <button\n//                         type=\"button\"\n//                         onClick={() => removeFromCartHandler(item.product)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n//         <div className=\"col-1\">\n//           <div >\n//             <ul>\n//               <li>\n//                 <h2>\n//                   Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) :\n//                   ${cartItems.reduce((a, c) => a + c.amount * c.qty, 0)}\n//                 </h2>\n//               </li>\n//               <li>\n//                 <button type=\"button\" onClick={checkoutHandler}>\n//                   Proceed to Checkout\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n_c = CartSccreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartSccreen\");","map":{"version":3,"sources":["/home/jayadev/ecomm2/src/screens/CartScreen.js"],"names":["React","CartSccreen","props","productId","match","params","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AAC1C,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AAEC,C,CAwwBL,W","sourcesContent":["import React from 'react';\n\nexport default function CartSccreen(props){\nconst productId = props.match.params.id;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"../../node_modules/axios/index\";\n// import { addToCart, removeFromCart } from \"../actions/cartActions\";\n// import { createOrder } from \"../actions/orderAction\";\n// import MessageBox from \"../components/MessageBox\";\n//\n// export default function CartScreen(props) {\n//   const productId = props.match.params.id;\n//   const qty = props.location.search\n//     ? Number(props.location.search.split(\"=\")[1])\n//     : 1;\n//   const cart = useSelector((state) => state.cart);\n//   const { cartItems } = cart;\n//   // const [items, setItems] = useState();\n//   // const { data } = await axios.get(\"/api/cart/findall\");\n//   // setItems(data);\n//\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (productId) {\n//       dispatch(addToCart(productId, qty));\n//     }\n//   }, [dispatch, productId, qty]);\n//\n//   const removeFromCartHandler = async (id) => {\n//     // const response = await axios({\n//     //   method: \"DELETE\",\n//     //   url: \"/api/delete/cart/\",\n//     //   data: {\n//\n//     //   id:id,\n//\n//     //   },\n//     // }).then(\n//     //   (response) => { axios.get('/api/cart')\n//     //     console.log(response);\n//     //   },\n//     // )\n//     // delete action\n//     dispatch(removeFromCart(id));\n//   };\n//\n//   // const checkoutHandler = () => {\n//   //   props.history.push(\"/orders/${order.id}\");\n//   //   placeOrderHandler();\n//   //   console.log(\"Order Received\");\n//   // };\n//   const checkoutHandler = async () => {\n//     dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n//\n//     const response = await axios({\n//       method: \"POST\",\n//       url: \"/api/order\",\n//       data: {\n//         amt: cart.totalPrice,\n//       },\n//     }).then((response) => {\n//       console.log(response);\n//       props.history.push(`/order`);\n//     });\n//   };\n//\n//   // const placeOrderHandler = async() => {\n//   // dispatch(createOrder({ ...cart, orderItems: cart.cartItems }))};\n//\n//   return (\n//     <>\n//       <div>\n//         {\" \"}\n//         ADD TO CART: ProdcutId: {productId} Quantity: {qty}{\" \"}\n//       </div>\n//       <div className=\"row top\">\n//         <div className=\"col-2\">\n//           <h1> Cart</h1>\n//           {cartItems.length === 0 ? (\n//             <MessageBox>\n//               Empty Cart. <Link to=\"/\">Back to HomeScreen</Link>\n//             </MessageBox>\n//           ) : (\n//             <ul>\n//               {cartItems.map((item) => (\n//                 <li key={item.product}>\n//                   <div className=\"row\">\n//                     <div className=\"min-30\">\n//                       <Link\n//                         to={`http://localhost:4000/api/products/${item.product}`}\n//                       >\n//                         {item.name}\n//                       </Link>\n//                     </div>\n//                     <div>\n//                       <select\n//                         value={item.qty}\n//                         onChange={(e) =>\n//                           dispatch(\n//                             addToCart(item.product, Number(e.target.value))\n//                           )\n//                         }\n//                       >\n//                         {[...Array(100).keys()].map((x) => (\n//                           <option key={x + 1} value={x + 1}>\n//                             {x + 1}\n//                           </option>\n//                         ))}\n//                       </select>\n//                     </div>\n//                     <div>${item.amount}</div>\n//                     <div>\n//                       <button\n//                         type=\"button\"\n//                         onClick={() => removeFromCartHandler(item.product)}\n//                       >\n//                         Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//         </div>\n//         <div className=\"col-1\">\n//           <div >\n//             <ul>\n//               <li>\n//                 <h2>\n//                   Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) :\n//                   ${cartItems.reduce((a, c) => a + c.amount * c.qty, 0)}\n//                 </h2>\n//               </li>\n//               <li>\n//                 <button type=\"button\" onClick={checkoutHandler}>\n//                   Proceed to Checkout\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}